plugins {
    id 'application'
    id 'java'
    id "name.remal.sonarlint" version "1.5.0"
}

group 'cache'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'net.spy', name: 'spymemcached', version: '2.12.3'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version:  '2.17.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.0'

    implementation 'org.redisson:redisson:3.19.0'
    implementation group: 'redis.clients', name: 'jedis', version: '4.3.1'
    implementation 'redis.clients:jedis:4.3.0'

    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.4')
    implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.4')

    implementation(group: 'org.apache.commons', name: 'commons-pool2', version: '2.0')

    def springVersion = '2.7.11'
    implementation group: 'org.springframework.data', name: 'spring-data-redis', version: springVersion
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: springVersion)
//    implementation group: 'org.springframework', name: 'spring-beans', version: '6.0.3'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: springVersion

    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.7.4'

    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

//mainClassName = "com.cache.CacheApplication"
mainClassName = "com.cache.redis.RedisSentinelApplication"

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

    manifest {
        attributes "Main-Class": mainClassName
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

//tasks.withType<Jar> { duplicatesStrategy = DuplicatesStrategy.INHERIT }

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

sonarlint {
    ignoreFailures = true
    excludes {
        message 'java:S1214'
        message 'kotlin:S100'
        message 'xml:S125'
    }
    includes {
        message 'java:S4266' // Enable java:S4266 which is disabled by default
    }
    ruleParameter('java:S119', 'format', '^[A-Z][a-zA-Z0-9]*$') // Allow upper camel-case for type parameter names
}
